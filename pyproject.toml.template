[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# Values updated to use centralized configuration
name = "{{PACKAGE_NAME}}"           # From src._package.PACKAGE_NAME
version = "{{VERSION}}"             # From src._version.__version__
description = "Open Host Factory Plugin for IBM Spectrum Symphony"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "AWS Professional Services", email = "aws-proserve@amazon.com"}
]
maintainers = [
    {name = "AWS Professional Services", email = "aws-proserve@amazon.com"}
]
keywords = [
    "aws",
    "ec2", 
    "hostfactory",
    "symphony",
    "hpc",
    "cluster",
    "cloud",
    "infrastructure"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Clustering",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.9"
dependencies = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "dynaconf>=3.2.0",
    "structlog>=23.1.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "psutil>=5.9.0",
    "prometheus-client>=0.17.0",
    "jsonschema>=4.17.0",
    "rich>=13.3.0",
    "python-dotenv>=1.0.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "requests>=2.31.0",
    "PyYAML>=6.0.0",
    "click>=8.0.0",
]

[dependency-groups]
# CI Dependencies: What CI needs to test, lint, and build docs
ci = [
    # Testing Framework
    "pytest>=7.4.3,<9.0.0",
    "pytest-cov>=4.1.0,<7.0.0",
    "pytest-env>=1.1.1,<2.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-asyncio>=0.21.1,<2.0.0",
    "pytest-timeout>=2.2.0,<3.0.0",
    "pytest-xdist>=3.3.1,<4.0.0",
    "pytest-html>=4.1.1,<5.0.0",
    "pytest-benchmark>=5.1.0,<6.0.0",
    "coverage>=7.3.2,<8.0.0",
    
    # AWS Testing (moto includes botocore/boto3 stubs automatically)
    "moto[all]>=4.2.7,<6.0.0",
    
    # Test Data and Mocking
    "responses>=0.24.0,<1.0.0",
    "requests-mock>=1.11.0,<2.0.0",
    
    # Code Quality and Linting
    "black>=23.9.1,<25.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<8.0.0",
    "flake8-docstrings>=1.7.0,<2.0.0",
    "flake8-bugbear>=23.9.16,<25.0.0",
    "flake8-comprehensions>=3.14.0,<4.0.0",
    "flake8-simplify>=0.21.0,<1.0.0",
    "mypy>=1.6.1,<2.0.0",
    "pylint>=3.0.2,<4.0.0",
    
    # Essential Type Stubs (only for core Python libraries)
    "types-PyYAML>=6.0.12.12,<7.0.0",
    "types-python-dateutil>=2.8.19.14,<3.0.0",
    
    # Security Scanning
    "bandit>=1.7.5,<2.0.0",
    "bandit-sarif-formatter>=1.1.1,<2.0.0",
    "safety>=3.0.1,<4.0.0",
    "pip-audit>=2.6.1,<3.0.0",
    
    # Documentation (needed for docs workflow)
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.1.0,<10.0.0",
    "mkdocstrings>=0.22.0,<1.0.0",
    "mkdocstrings-python>=1.1.0,<2.0.0",
    "mkdocs-gen-files>=0.5.0,<1.0.0",
    "mkdocs-literate-nav>=0.6.0,<1.0.0",
    "mkdocs-section-index>=0.3.0,<1.0.0",
    "mike>=1.1.0,<3.0.0",
    
    # Build and Packaging (needed for CI builds)
    "build>=1.0.3,<2.0.0",
    "wheel>=0.41.3,<1.0.0",
    
    # Security Tools (for CI security scans)
    "semgrep>=1.45.0,<2.0.0",
    "cyclonedx-bom>=4.0.0,<5.0.0",
]

# Dev Dependencies: Additional dev tools (CI deps are inherited)
dev = [
    "autoflake>=2.2.1,<3.0.0",
    "autopep8>=2.0.4,<3.0.0",
    "bump2version>=1.0.1,<2.0.0",
    "pre-commit>=3.5.0,<4.0.0",
    "line-profiler>=4.1.1,<5.0.0",
    "memory-profiler>=0.61.0,<1.0.0",
    "py-spy>=0.3.14,<1.0.0",
    "py-cpuinfo>=9.0.0,<10.0.0",
    "ipdb>=0.13.13,<1.0.0",
    "ipython>=8.16.1,<9.0.0",
    "radon>=6.0.1,<7.0.0",
    "pip-tools>=7.3.0,<8.0.0",
    
    # Optional Type Stubs (for better dev experience, but may conflict)
    # Developers can install these manually if they want better type checking
    # "boto3-stubs[essential]>=1.34.0,<2.0.0",
    # "types-requests>=2.31.0.10,<3.0.0",
    # "mypy-boto3-ec2>=1.34.0,<2.0.0",
    # "mypy-boto3-s3>=1.34.0,<2.0.0",
    # "mypy-boto3-lambda>=1.34.0,<2.0.0",
    # "mypy-boto3-dynamodb>=1.34.0,<2.0.0",
]

[project.optional-dependencies]
[project.scripts]
{{PACKAGE_NAME_SHORT}} = "run:cli_main"     # From src._package.PACKAGE_NAME_SHORT
{{PACKAGE_NAME}} = "run:cli_main"           # From src._package.PACKAGE_NAME

# URLs using centralized repository detection  
[project.urls]
Homepage = "{{REPO_URL}}"           # From src._package.REPO_URL
Documentation = "{{DOCS_URL}}"      # From src._package.DOCS_URL  
Repository = "{{REPO_URL}}"         # From src._package.REPO_URL
"Bug Reports" = "{{REPO_ISSUES_URL}}"  # From src._package.REPO_ISSUES_URL

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]



[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
env = [
    "AWS_DEFAULT_REGION=us-east-1",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing"
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "{{ DEFAULT_PYTHON }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
