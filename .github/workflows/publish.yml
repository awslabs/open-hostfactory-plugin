name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to publish to'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

env:
  PYTHON_VERSION: '3.11'

jobs:
  publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'pypi' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        enable-cache: true

    - name: Install build dependencies with uv
      run: |
        uv pip install --system build twine
    
    - name: Build package
      run: |
        python -m build --clean
    
    - name: Check package
      run: |
        python -m twine check dist/*
    
    - name: Publish to Test PyPI
      if: github.event.inputs.environment == 'testpypi' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment != 'pypi')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        verbose: true
    
    - name: Publish to PyPI
      if: github.event.inputs.environment == 'pypi' || github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
    
    - name: Create deployment summary
      run: |
        echo "## Package Published Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.environment }}" = "pypi" ] || [ "${{ github.event_name }}" = "release" ]; then
          echo "**Environment:** Production PyPI" >> $GITHUB_STEP_SUMMARY
          echo "**Installation:** \`pip install open-hostfactory-plugin\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Environment:** Test PyPI" >> $GITHUB_STEP_SUMMARY
          echo "**Installation:** \`pip install --index-url https://test.pypi.org/simple/ open-hostfactory-plugin\`" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commands:**" >> $GITHUB_STEP_SUMMARY
        echo "- \`ohfp --help\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`open-hostfactory-plugin --help\`" >> $GITHUB_STEP_SUMMARY
