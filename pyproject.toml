[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "open-hostfactory-plugin"
version = "0.1.0"
description = "Open Host Factory Plugin for IBM Spectrum Symphony"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "AWS Professional Services", email = "aws-proserve@amazon.com"}
]
maintainers = [
    {name = "AWS Professional Services", email = "aws-proserve@amazon.com"}
]
keywords = [
    "aws",
    "ec2", 
    "hostfactory",
    "symphony",
    "hpc",
    "cluster",
    "cloud",
    "infrastructure"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Clustering",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.8"
dependencies = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "dynaconf>=3.2.0",
    "structlog>=23.1.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "psutil>=5.9.0",
    "prometheus-client>=0.17.0",
    "jsonschema>=4.17.0",
    "rich>=13.3.0",
    "python-dotenv>=1.0.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "requests>=2.31.0",
    "PyYAML>=6.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-env>=1.1.1",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.1",
    "pytest-timeout>=2.2.0",
    "pytest-xdist>=3.3.1",
    "pytest-html>=4.1.1",
    "pytest-benchmark>=5.1.0",
    "coverage>=7.3.2",
    "moto[all]>=4.2.7",
    "boto3-stubs[essential]>=1.34.0",
    "responses>=0.24.0",
    "requests-mock>=1.11.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "pylint>=2.17.3",
    "flake8>=6.1.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.3.12",
    "flake8-comprehensions>=3.14.0",
    "flake8-simplify>=0.21.0",
    "radon>=6.0.1",
    "mccabe>=0.7.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "types-boto3>=1.0.2",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.12",
    "types-python-dateutil>=2.8.19",
    "pre-commit>=3.3.3",
    "debugpy>=1.8.0",
    "ipython>=8.12.2",
    "ipdb>=0.13.13",
    "pip-tools>=7.3.0",
    "bump2version>=1.0.1",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.1",
    "py-spy>=0.3.14",
    # docker-compose removed - use system docker-compose instead
    # This resolves python-dotenv version conflict
    "aws-sam-cli>=1.95.0",
    "cfn-lint>=0.80.3",
    "autoflake>=2.0.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-env>=1.1.1",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.1",
    "pytest-timeout>=2.2.0",
    "coverage>=7.3.2",
    "moto>=4.2.7",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings>=0.22.0",
    "mkdocstrings-python>=1.1.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
    "mike>=1.1.0",
]

[project.scripts]
ohfp = "run:cli_main"
open-hostfactory-plugin = "run:cli_main"

[project.urls]
Homepage = "https://github.com/aws-samples/open-hostfactory-plugin"
Documentation = "https://open-hostfactory-plugin.readthedocs.io/"
Repository = "https://github.com/aws-samples/open-hostfactory-plugin"
"Bug Reports" = "https://github.com/aws-samples/open-hostfactory-plugin/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]



[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
env = [
    "AWS_DEFAULT_REGION=us-east-1",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing"
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
