# GitLab CI/CD pipeline for MkDocs deployment to GitLab Pages
image: python:3.11-slim

stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - .venv/

# Test stage - validate documentation builds correctly
test:docs:
  stage: test
  before_script:
    - pip install --upgrade pip
    - pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python mkdocs-gen-files mkdocs-literate-nav mkdocs-section-index mike
  script:
    - cd docs
    - mkdocs build  # Build without --strict to allow warnings
    - echo "Documentation builds successfully (warnings allowed)"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"

# Build stage - generate documentation for main branch (production)
build:docs:production:
  stage: build
  before_script:
    - pip install --upgrade pip
    - pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python mkdocs-gen-files mkdocs-literate-nav mkdocs-section-index mike
  script:
    - cd docs
    - mkdocs build
    - mv site ../public  # GitLab Pages expects 'public' directory
    - echo "Production documentation built and moved to public/"
    - ls -la ../public/
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

# Build stage - generate documentation for develop branch (staging)
build:docs:staging:
  stage: build
  before_script:
    - pip install --upgrade pip
    - pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python mkdocs-gen-files mkdocs-literate-nav mkdocs-section-index mike
  script:
    - cd docs
    - mkdocs build
    - mkdir -p ../public/develop
    - cp -r site/* ../public/develop/
    - echo "Staging documentation built and moved to public/develop/"
    - ls -la ../public/develop/
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

# Deploy stage - GitLab Pages deployment (handles both main and develop)
pages:
  stage: deploy
  script:
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        echo "Deploying production to GitLab Pages..."
        echo "Production site: https://aws-gfs-acceleration.gitlab.aws.dev/open-hostfactory-plugin"
      elif [ "$CI_COMMIT_BRANCH" = "develop" ]; then
        echo "Deploying staging to GitLab Pages..."
        echo "Staging site: https://aws-gfs-acceleration.gitlab.aws.dev/open-hostfactory-plugin/develop"
      fi
    - ls -la public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"
  dependencies:
    - build:docs:production
    - build:docs:staging
